<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dassa.mapper.DriverMapper">
		<!--mypage뿌리기  -->
		<select id="driverMyPage" parameterType="userVO" resultType="userVO">
		   select user_idx as userIdx,
				user_id as userId,
				user_pw as userPw,
				user_name as userName,
				user_phone as userPhone,
				user_email as userEmail,
				pro_filename as proFilename,
				pro_filepath as proFilepath,
				user_introduce as userIntroduce,
				registration_number as registrationNumber,
				user_car as userCar,
				comp_filename as compFilename,
				comp_filepath as compFilepath,
				user_type as userType,
				social_id as socialId 
		  from user_tbl where user_id=#{userId} 
		</select>
		
	<!--mypage 이미지만 업로드  -->	
	<update id="driverMypageUpdate" parameterType="userVO">
	update user_tbl set
	pro_filename=#{proFilename}, pro_filepath=#{proFilepath}
		where user_id=#{userId}
	</update>
	
	<!--mypage 텍스트 업로드  -->
	<update id="driverMypageUpdateText" parameterType="userVO">
	update user_tbl set 
	user_name=#{userName},
	user_phone=#{userPhone},
	user_email=#{userEmail},
	user_introduce=#{userIntroduce},
	user_car=#{userCar}
		where user_id=#{userId}
	</update>
	
	<!--입찰 검색 //입찰목록 뿌리기-->
	<select id="driverAuctionList" resultType="moveApplyVO" parameterType="com.dassa.vo.DriverPageData">
		select a.* from (
			select apply_idx as applyIdx,
				guest_name as guestName,
				start_addr1 as startAddr1,
				start_addr2 as startAddr2,
				start_addr3 as startAddr3,
				start_latitude as startLatitude,
				start_longitude as startLongitude,
				end_addr1 as endAddr1,
				end_addr2 as endAddr2,
				end_addr3 as endAddr3,
				end_latitude as endLatitude,
				start_longitude as endLongitude,
				apply_date as applyDate,
				apply_time as applyTime,
				ROW_NUMBER() OVER(ORDER BY apply_Idx DESC) rNUM
				from move_apply_tbl
				where apply_status =0  
				
				<if test="userName!=''" >				<!--이름 검색  -->
				and guest_name like '%'||#{userName}||'%'			
				</if>
				<if test="minDate!='' and maxDate!=''">	<!--날짜 검색  -->
					and apply_date between to_date(replace('${minDate}','-','')||'000000', 'YYYYMMDDhh24miss') 
              		and to_date(replace('${maxDate}','-','')||'235959','YYYYMMDDhh24miss')
				</if>
				 <if test="startAddr1 !=null">			<!--츌발지 검색  -->
					<foreach collection="startAddr1" item="Addr1"  separator=" ">
						and start_addr1 like '%'||#{Addr1}||'%'
					</foreach>
				</if>
				<if test="endAddr1 !=null">				<!--도착지 검색  -->
					<foreach collection="endAddr1" item="end1"  separator=" ">
						and end_addr1 like '%'||#{end1}||'%'
					</foreach>
				</if>
				
				) a
			where rNUM between (${page}-1)*${listSize}+1 and ${page}*${listSize}
	</select>
	
	<!--총 게시물 수 구하기(입찰 페이징)  -->
	<select id="driverTotalCount" resultType="_int" parameterType="com.dassa.vo.DriverPageData">
		select count(*) cnt from
		(
			select 
				ROW_NUMBER() OVER(ORDER BY apply_Idx DESC) rNUM
				from move_apply_tbl
				where apply_status =0  
				
				<if test="userName!=''" >				<!--이름검색  -->
				and guest_name like '%'||#{userName}||'%'			
				</if>
				
				<if test="minDate!='' and maxDate!=''">	<!--날짜 검색  -->
					and apply_date between to_date(replace(#{minDate},'-','')||'000000', 'YYYYMMDDhh24miss') 
              		and to_date(replace(#{maxDate},'-','')||'235959','YYYYMMDDhh24miss')
				</if>
				
				<if test="startAddr1 !=null">			<!--출발지 주소검색  -->
					<foreach collection="startAddr1" item="Addr1" separator=" ">
						and start_addr1 like '%'||#{Addr1}||'%'
					</foreach>
				</if>
				
				<if test="endAddr1 !=null">				<!--도착지 주소검색  -->
					<foreach collection="endAddr1" item="end1" separator=" ">
						and end_addr1 like '%'||#{end1}||'%'
					</foreach>
				</if>
		)
	</select>
	
	<!--이사목록 뿌리기  -->
	<select id="driverMoveList" resultType="moveApplyVO" parameterType="com.dassa.vo.DriverPageData">
			 select a.* from (
				select m.apply_idx as applyIdx,
				m.apply_date as applyDate,
				m.apply_time as applyTime,
				m.guest_name as guestName,
				m.guest_phone as guestPhone,
				m.start_addr1 as startAddr1,
				m.end_addr1 as endAddr1,
				m.apply_hope as applyHope,
				m.apply_status as applyStatus,
				ROW_NUMBER() OVER(ORDER BY m.apply_Idx DESC) rNUM,
                d.driver_idx as driverIdx
				from move_apply_tbl m 
                join driver_tbl d on (m.apply_idx = d.apply_idx)
				where (m.apply_status =1 or m.apply_status =2 or m.apply_status =3) and (d.driver_idx =#{driverIdx})
				
				<if test="userName!=''" >
				and m.guest_name like '%'||#{userName}||'%'			
				</if>
				<if test="minDate!='' and maxDate!=''">
					and m.apply_date between to_date(replace(#{minDate},'-','')||'000000', 'YYYYMMDDhh24miss') 
              		and to_date(replace(#{maxDate},'-','')||'235959','YYYYMMDDhh24miss')
				</if>
				) a
			where rNUM between (#{page}-1)*#{listSize}+1 and #{page}*#{listSize}
	</select>
	<!--이사관리 총게시물 수 구하기.  -->
	<select id="driverMoveTotalCount" resultType="_int" parameterType="com.dassa.vo.DriverPageData">
			select count(*) cnt from
			(
			select 
				ROW_NUMBER() OVER(ORDER BY apply_Idx DESC) rNUM
				from move_apply_tbl
				where (apply_status =1 or apply_status = 2) 
				
				<if test="userName!=''" >
				and guest_name like '%'||#{userName}||'%'			
				</if>
				<if test="minDate!='' and maxDate!=''">
					and apply_date between to_date(replace(#{minDate},'-','')||'000000', 'YYYYMMDDhh24miss') 
              		and to_date(replace(#{maxDate},'-','')||'235959','YYYYMMDDhh24miss')
				</if>
		)
	</select>
	
	<!--입찰목록 상세보기 리스트 뿌리기 (상품) -->
	<select id="driverSelectOne" parameterType="_int" resultType="com.dassa.vo.DriverAuctionDetailVO">
		select  apply_idx as applyIdx,
				guest_name as guestName,
				guest_phone as gusetPhone,
				apply_date as applyDate,
				start_addr1 as startAddr1,
				start_addr2 as startAddr2,
				start_addr3 as startAddr3,
				end_addr1 as endAddr1,
				end_addr2 as endAddr2,
				end_addr3 as endAddr3,
				start_latitude as startLatitude,
				start_longitude as startLongitude,
				end_latitude as endLatitude,
				end_longitude as endLongitude,
				start_elevator as startElevator,
				end_elevator as endElevator,
				start_parking as startParking,
				end_parking as endParking,
				start_type as startType,
				end_type as endType,
				start_structure as startStructure,
				start_size as startSize,
				start_floor as startFloor,
				end_floor as endFloor,
				apply_time as applyTime,
				apply_hope as applyHope,
				apply_help as applyHelp,
				apply_memo as applyMemo,
				apply_status as applyStatus
				from move_apply_tbl
				where apply_idx=#{applyIdx}
	</select>
	
	<!--입찰목록 상세보기 리스트 뿌리기  (옵션)-->
	<select id="driverOptionList" parameterType="_int" resultType="com.dassa.vo.DriverApplyOptionVO">
		select 
				option_idx as optionIdx,
				package_type as packageType,
				package_name as packageName,
				package_option as packageOption,
				package_img_path as packageImgOption
				from move_apply_option_tbl
				where apply_idx=#{applyIdx}
	</select>
	<!--입찰목록 상세보기 리스트 뿌리기 (이미지) -->
	<select id="driverImgList" parameterType="_int" resultType="com.dassa.vo.DriverApplyImgVO">
		select 	img_idx as imgIdx,
				img_name as imgName,
				img_path as imgPath
				from move_apply_img_tbl
				where apply_idx=#{applyIdx} 
	</select>
	<!-- //입찰관리 견적값 넣기 insert 하기 -->
	<insert id="driverAuctionInsert" parameterType="com.dassa.vo.DriverVO">
		insert into driver_tbl values(#{driverIdx},#{applyIdx},#{userCar},#{driverMessage},#{ladderState},#{estimateAmount},0)
	</insert>
	
	<!-- 입찰관리 입찰상태 update 하기 -->
	<update id="driverAuctionUpdate" parameterType="_int">
		update MOVE_APPLY_TBL set apply_status= 1 where apply_idx=#{applyIdx}
	</update>
	
	
	<select id="driverMoveSelectOne" parameterType="_int" resultType="com.dassa.vo.DriverVO">
		select	driver_idx as driverIdx,
				apply_idx as applyIdx,
				user_car as userCar,
				driver_message as driverMessage,
				ladderState,
				EstimateAmount
				from driver_tbl
				where apply_idx = #{applyIdx}
	</select>
	
	<select id="driverReview" parameterType="_int" resultType="com.dassa.vo.DriverMypageReviewVO">
		select  r.review_idx as reviewIdx,
				r.driver_idx as driverIdx,
				r.apply_idx as applyIdx,
				r.review_star as reviewStar,
				r.review_Message as reviewMessage,
				r.extra_money as extraMoney,
				r.review_date as reviewDate,
				d.estimateamount as estimateAmount
			from driver_review_tbl r 
			left join driver_tbl d on (r.driver_idx = d.driver_idx)
			where r.driver_idx =#{driverIdx}
	</select>
	
	<select id="userNameSelectOne" resultType="com.dassa.vo.UserVO">
		select user_Name as userName
		from user_tbl 
		where user_type= 3 
	</select>
	
	
</mapper>