<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dassa.mapper.ShopMapper">
	<resultMap id="memberListMap" type="com.dassa.vo.ShopMemberVO">
		<result column="SHOP_MEMBER_IDX" property="shopMemberIdx"/>
		<result column="SHOP_IDX" property="shopIdx"/>
		<result column="SHOP_MEMBER_NAME" property="shopMemberName"/>
		<result column="SHOP_MEMBER_PHONE" property="shopMemberPhone"/>
		<result column="SHOP_MEMBER_COMMENT" property="shopMemberComment"/>
		<result column="SHOP_MEMBER_IMG_NAME" property="shopMemberImgName"/>
		<result column="SHOP_MEMBER_IMG_PATH" property="shopMemberImgPath"/>
		<result column="SHOP_MEMBER_STATE" property="shopMemberState"/>
		<result column="SHOP_MEMBER_REG_DATE" property="shopMemberRegDate"/>
		<result column="SHOP_MEMBER_LEAVE_DATE" property="shopMemberLeaveDate"/>
	</resultMap>
	<!-- 중개사 myPage -->
	<select id="shopMyPage" parameterType="userVO" resultType="userVO">
		select user_idx as userIdx,
			user_id as userId,
			user_name as userName,
			user_phone as userPhone,
			pro_filename as proFilename,
			pro_filepath as proFilepath,
			user_introduce as userIntroduce,
			registration_number as registrationNumber,
			business_number as businessNumber
		from user_tbl where user_id=#{userId}
	</select>
	<!-- 직원 가져오기 -->
	<select id="getMember" resultMap="memberListMap" parameterType="int">
		select * from SHOP_MEMBER_TBL where SHOP_MEMBER_STATE = 0 and SHOP_IDX = #{userIdx}
	</select>
	<select id="getMemberView" parameterType="string" resultType="shopMemberVO">
		select 
			shop_member_phone as shopMemberPhone,
			shop_member_img_path as shopMemberImgPath
		 from SHOP_MEMBER_TBL where SHOP_MEMBER_STATE = 0 and SHOP_MEMBER_NAME = #{shopMemberName}
	</select>
	<!-- 주소 구 리스트 가져오기 -->
	<select id="getJusoGuList" parameterType="string" resultType="jusoGuVO">
		select 
			juso_gu_code as jusoGuCode,
			juso_gu_name as jusoGuName
		from juso_gu_tbl where juso_gu_code like #{jusoCityCode}||'%' order by juso_gu_name asc
	</select>
	<!-- 주소 동 리스트 가져오기 -->
	<select id="getJusoDongList" parameterType="string" resultType="jusoDongVO">
		select 
			juso_dong_code as jusoDongCode,
			juso_dong_name as jusoDongName
		from juso_dong_tbl where juso_dong_code like #{jusoGuCode}||'%' order by juso_dong_name asc
	</select>
	<!-- 등록 할 수 있는 개수 확인 -->
 	<select id="shopCount"  resultType="shopPremiumItemVO" parameterType="_int">
		select shop_premium_item_idx as shopPremiumItemIdx from shop_premium_item_tbl where shop_item_idx=0 and user_idx=#{userIdx}
	</select>
	<!-- 아이템 적용 할 수 있는 개수 확인 -->
	<select id="powerCount"  resultType="shopPowerItemVO" parameterType="_int">
		select shop_power_item_idx as shopPowerItemIdx from shop_power_item_tbl where shop_power_item_state=0 and user_idx=#{userIdx}
	</select>
	<!-- 매물 등록  -->
	<insert id="shopItemAdd" parameterType="shopItemVO">
		insert into shop_item_tbl values(
			shop_item_idx_seq.nextval,
			#{userIdx, jdbcType=VARCHAR},
			#{shopName, jdbcType=VARCHAR},
			#{shopItemTitle, jdbcType=VARCHAR},
			#{shopItemContent, jdbcType=VARCHAR},
			#{shopItemSecretMemo, jdbcType=VARCHAR},
			#{shopItemManager, jdbcType=VARCHAR},
			#{shopItemManagerPhone, jdbcType=VARCHAR},
			shop_item_img_idx_seq.nextval,
			default,
			#{shopItemType1, jdbcType=VARCHAR},
			#{shopItemType2, jdbcType=VARCHAR},
			#{shopItemAddr1, jdbcType=VARCHAR},
			#{shopItemAddr2, jdbcType=VARCHAR},
			#{shopItemAddrDong1, jdbcType=VARCHAR},
			#{shopItemAddrHo1, jdbcType=VARCHAR},
			#{shopItemAddrDong2, jdbcType=VARCHAR},
			#{shopItemAddrHo2, jdbcType=VARCHAR},
			#{shopItemLatitude, jdbcType=VARCHAR},
			#{shopItemLongitude, jdbcType=VARCHAR},
			#{shopItemDealType, jdbcType=VARCHAR},
			#{shopItemDeposit, jdbcType=VARCHAR},
			#{shopItemDealPrice, jdbcType=VARCHAR},
			#{shopItemSize1, jdbcType=VARCHAR},
			#{shopItemSizeAll1, jdbcType=VARCHAR},
			#{shopItemSize2, jdbcType=VARCHAR},
			#{shopItemSizeAll2, jdbcType=VARCHAR},
			#{shopItemSize3, jdbcType=VARCHAR},
			#{shopItemSizeAll3, jdbcType=VARCHAR},
			#{shopItemSize4, jdbcType=VARCHAR},
			#{shopItemSizeAll4, jdbcType=VARCHAR},
			#{shopItemFloor1, jdbcType=VARCHAR},
			#{shopItemFloorAll1, jdbcType=VARCHAR},
			#{shopItemFloor2, jdbcType=VARCHAR},
			#{shopItemFloorAll2, jdbcType=VARCHAR},
			#{shopItemHeating1, jdbcType=VARCHAR},
			#{shopItemHeating2, jdbcType=VARCHAR},
			#{shopItemBulidCompany, jdbcType=VARCHAR},
			#{shopItemBulidHallway, jdbcType=VARCHAR},
			#{shopItemBulidDate, jdbcType=VARCHAR},
			#{shopItemMovingDate1, jdbcType=VARCHAR},
			#{shopItemMovingDate2, jdbcType=VARCHAR},
			#{shopItemManage, jdbcType=VARCHAR},
			#{shopItemManagePrice, jdbcType=VARCHAR},
			#{shopItemManagePriceOption, jdbcType=VARCHAR},
			#{shopItemParking, jdbcType=VARCHAR},
			#{shopItemParkingPrice, jdbcType=VARCHAR},
			#{shopItemAnimal, jdbcType=VARCHAR},
			#{shopItemElevator, jdbcType=VARCHAR},
			#{shopItemBalcony, jdbcType=VARCHAR},
			#{shopItemBuiltIn, jdbcType=VARCHAR},
			#{shopItemStructure, jdbcType=VARCHAR},
			#{shopItemOption, jdbcType=VARCHAR},
			#{shopItemLoan, jdbcType=VARCHAR},
			sysdate,
			#{shopItemDelDate, jdbcType=VARCHAR},
			#{shopItemOkState, jdbcType=VARCHAR},
			default,
			#{shopItemHouseNumber, jdbcType=VARCHAR}
			)
	</insert>
	<!-- 매물 등록 시 아이템에 해당 매물 등록(올릴 수 있는 카운트 차감)  -->
	<update id="shopCountUpdate" parameterType="shopItemVO">
		update shop_premium_item_tbl set shop_item_idx=shop_item_idx_seq.currval
			where shop_premium_item_idx=(select shop_premium_item_idx from
			(select rownum as rnum, item.* from (select * from shop_premium_item_tbl where shop_item_idx=0 and user_idx=#{userIdx} order by rownum asc)
			 item where rownum = 1))
	</update>
	
	<!-- 매물 이미지 등록 -->
	<insert id="shopItemImgAdd" parameterType="java.util.List">
		insert into 
		shop_item_img_tbl (
			shop_img_idx,
			shop_item_idx,
			shop_img_name,
			shop_img_path
			)
			select
			shop_item_img_idx_seq.nextval,
			shop_item_idx_seq.currval,
			T.* from(
			<foreach collection="list" item="item" separator="union all">
				select
				#{item.shopImgName} as shop_img_name,
				#{item.shopImgPath} as shop_img_path
				from dual
			</foreach>
			) T
	</insert>
	<!-- 매물 수정 -->
	<update id="shopItemModify" parameterType="shopItemVO">
		update shop_item_tbl set 
			shop_item_title=#{shopItemTitle, jdbcType=VARCHAR},
			shop_item_content=#{shopItemContent, jdbcType=VARCHAR},
			shop_item_secret_memo=#{shopItemSecretMemo, jdbcType=VARCHAR},
			shop_item_manager=#{shopItemManager, jdbcType=VARCHAR},
			shop_item_manager_phone=#{shopItemManagerPhone, jdbcType=VARCHAR},
			shop_item_type1=#{shopItemType1, jdbcType=VARCHAR},
			shop_item_type2=#{shopItemType2, jdbcType=VARCHAR},
			shop_item_addr1=#{shopItemAddr1, jdbcType=VARCHAR},
			shop_item_addr2=#{shopItemAddr2, jdbcType=VARCHAR},
			shop_item_addr_dong1=#{shopItemAddrDong1, jdbcType=VARCHAR},
			shop_item_addr_ho1=#{shopItemAddrHo1, jdbcType=VARCHAR},
			shop_item_addr_dong2=#{shopItemAddrDong2, jdbcType=VARCHAR},
			shop_item_addr_ho2=#{shopItemAddrHo2, jdbcType=VARCHAR},
			shop_item_latitude=#{shopItemLatitude, jdbcType=VARCHAR},
			shop_item_longitude=#{shopItemLongitude, jdbcType=VARCHAR},
			shop_item_deal_type=#{shopItemDealType, jdbcType=VARCHAR},
			shop_item_deposit=#{shopItemDeposit, jdbcType=VARCHAR},
			shop_item_deal_price=#{shopItemDealPrice, jdbcType=VARCHAR},
			shop_item_size1=#{shopItemSize1, jdbcType=VARCHAR},
			shop_item_size_all1=#{shopItemSizeAll1, jdbcType=VARCHAR},
			shop_item_size2=#{shopItemSize2, jdbcType=VARCHAR},
			shop_item_size_all2=#{shopItemSizeAll2, jdbcType=VARCHAR},
			shop_item_size3=#{shopItemSize3, jdbcType=VARCHAR},
			shop_item_size_all3=#{shopItemSizeAll3, jdbcType=VARCHAR},
			shop_item_size4=#{shopItemSize4, jdbcType=VARCHAR},
			shop_item_size_all4=#{shopItemSizeAll4, jdbcType=VARCHAR},
			shop_item_floor1=#{shopItemFloor1, jdbcType=VARCHAR},
			shop_item_floor_all1=#{shopItemFloorAll1, jdbcType=VARCHAR},
			shop_item_floor2=#{shopItemFloor2, jdbcType=VARCHAR},
			shop_item_floor_all2=#{shopItemFloorAll2, jdbcType=VARCHAR},
			shop_item_heating1=#{shopItemHeating1, jdbcType=VARCHAR},
			shop_item_moving_date1=#{shopItemMovingDate1, jdbcType=VARCHAR},
			shop_item_moving_date2=#{shopItemMovingDate2, jdbcType=VARCHAR},
			shop_item_manage=#{shopItemManage, jdbcType=VARCHAR},
			shop_item_manage_price=#{shopItemManagePrice, jdbcType=VARCHAR},
			shop_item_manage_price_option=#{shopItemManagePriceOption, jdbcType=VARCHAR},
			shop_item_parking=#{shopItemParking, jdbcType=VARCHAR},
			shop_item_parking_price=#{shopItemParkingPrice, jdbcType=VARCHAR},
			shop_item_animal=#{shopItemAnimal, jdbcType=VARCHAR},
			shop_item_elevator=#{shopItemElevator, jdbcType=VARCHAR},
			shop_item_balcony=#{shopItemBalcony, jdbcType=VARCHAR},
			shop_item_built_in=#{shopItemBuiltIn, jdbcType=VARCHAR},
			shop_item_structure=#{shopItemStructure, jdbcType=VARCHAR},
			shop_item_option=#{shopItemOption, jdbcType=VARCHAR},
			shop_item_loan=#{shopItemLoan, jdbcType=VARCHAR},
			shop_item_house_number=#{shopItemHouseNumber, jdbcType=VARCHAR}
		where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 매물 이미지 수정 -->
	<update id="shopItemImgModify" parameterType="shopItemImgVO">
		update shop_item_img_tbl set
			shop_img_name=#{shopImgName},
			shop_img_path=#{shopImgPath}
		where shop_item_img_idx=#{shopImgIdx} and shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 매물 전체 리스트 -->
	<select id="selectAllList" resultType="shopItemVO" parameterType="map">
			select shop_item_idx as shopItemIdx,
				shop_item_manager as shopItemManager,
				shop_item_type1 as shopItemType1,
				shop_item_deal_type as shopItemDealType,
				shop_item_title as shopItemTitle,
				shop_item_sale_state as shopItemSaleState,
				shop_item_premium_state as shopItemPremiumState,
				shop_item_reg_date as shopItemRegDate
			from (select rownum as rnum, item.* from (select * from shop_item_tbl where (shop_item_sale_state='판매중' or shop_item_sale_state='판매중단' or shop_item_sale_state='판매완료') and user_idx=#{userIdx}
			order by rownum desc) item)
			where rnum between #{start} and #{end} 
	</select>
	<!-- 매물 총 게시물 수 -->
	<select id="shopItemTotalCount" resultType="_int">
		select count(*) cnt from shop_item_tbl where shop_item_sale_state='판매중' or shop_item_sale_state='판매중단' or shop_item_sale_state='판매완료' 
	</select>
	<!-- 매물 상세보기 -->
	<select id="shopItemInfo" parameterType="shopItemVO" resultType="shopItemVO">
		select shop_item_idx as shopItemIdx,
			user_idx as userIdx,
			shop_name as shopName, 
			shop_item_title as shopItemTitle,
			shop_item_content as shopItemContent,
			shop_item_secret_memo as shopItemSecretMemo,
			shop_item_manager as shopItemManager,
			shop_item_manager_phone as shopItemManagerPhone,
			shop_img_idx as shopImgIdx,
			shop_item_premium_state as shopItemPremium,
			shop_item_type1 as shopItemType1,
			shop_item_type2 as shopItemType2,
			shop_item_addr1 as shopItemAddr1,
			shop_item_addr2 as shopItemAddr2,
			shop_item_addr_dong1 as shopItemAddrDong1,
			shop_item_addr_ho1 as shopItemAddrHo1,
			shop_item_addr_dong2 as shopItemAddrDong2,
			shop_item_addr_ho2 as shopItemAddrHo2,
			shop_item_deal_type as shopItemDealType,
			shop_item_deposit as shopItemDeposit,
			shop_item_deal_price as shopItemDealPrice,
			shop_item_size1 as shopItemSize1,
			shop_item_size_all1 as shopItemSizeAll1,
			shop_item_size2 as shopItemSize2,
			shop_item_size_all2 as shopItemSizeAll2,
			shop_item_size3 as shopItemSize3,
			shop_item_size_all3 as shopItemSizeAll3,
			shop_item_size4 as shopItemSize4,
			shop_item_size_all4 as shopItemSizeAll4,
			shop_item_floor1 as shopItemFloor1,
			shop_item_floor_all1 as shopItemFloorAll1,
			shop_item_floor2 as shopItemFloor2,
			shop_item_floor_all2 as shopItemFloorAll2,
			shop_item_heating1 as shopItemHeating1,
			shop_item_heating2 as shopItemHeating2,
			shop_item_bulid_company as shopItemBulidCompany,
			shop_item_bulid_hallway as shopItemBulidHallway,
			shop_item_bulid_date as shopItemBulidDate,
			shop_item_moving_date1 as shopItemMovingDate1,
			shop_item_moving_date2 as shopItemMovingDate2,
			shop_item_manage as shopItemManage,
			shop_item_manage_price as shopItemManagePrice,
			shop_item_manage_price_option as shopItemManagePriceOption,
			shop_item_parking as shopItemParking,
			shop_item_parking_price as shopItemParkingPrice,
			shop_item_animal as shopItemAnimal,
			shop_item_elevator as shopItemElevator,
			shop_item_balcony as shopItemBalcony,
			shop_item_built_in as shopItemBuiltIn,
			shop_item_structure as shopItemStructure,
			shop_item_option as shopItemOption,
			shop_item_loan as shopItemLoan,
			shop_item_reg_date as shopItemRegDate,
			shop_item_del_date as shopItemDelDate,
			shop_item_ok_state as shopItemOkState,
			shop_item_sale_state as shopItemSaleState,
			shop_item_house_number as shopItemHouseNumber
			from shop_item_tbl where shop_item_idx=#{shopItemIdx}
	</select>
	<!--매물상세보기 이미지 -->
	<select id="shopItemImgList" parameterType="_int" resultType="shopItemImgVO">
		select shop_img_idx as shopImgIdx,
				shop_item_idx as shopItemIdx,
				shop_img_name as shopImgName,
				shop_img_path as shopImgPath
				from shop_item_img_tbl
			where shop_item_idx=#{shopItemIdx}
	</select>
	
	<!-- 아이템 적용 -->
	<update id="powerIng" parameterType="_int">
		update shop_item_tbl set shop_item_premium_state='1' where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 아이템 적용 중단 -->
	<update id="powerEnd" parameterType="_int">
		update shop_item_tbl set shop_item_premium_state='0' where shop_item_idx=#{shopItemIdx}
	</update>
	
	
	<!-- 매물 판매 중단 -->
	<update id="shopItemStop" parameterType="shopItemVO">
		update shop_item_tbl set shop_item_sale_state='판매중단', shop_item_del_date=sysdate where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 매물 판매 매물 판매중단,삭제 시 아이템 개수 update-->
	<update id="shopPremiumItemStop" parameterType="_int">
		update shop_premium_item_tbl set shop_item_idx=0
			where shop_premium_item_idx=(select shop_premium_item_idx from
			(select rownum as rnum, item.* from (select * from shop_premium_item_tbl where shop_item_idx=#{shopItemIdx} order by rownum asc)
			 item where rownum = 1))
	</update>
	<!-- 매물 판매 완료 -->
	<update id="shopItemSuc" parameterType="shopItemVO">
		update shop_item_tbl set shop_item_sale_state='판매완료' where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 매물 판매 진행 -->
	<update id="shopItemIng" parameterType="shopItemVO">
		update shop_item_tbl set shop_item_sale_state='판매중' where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 매물 판매 매물 판매진행 시 아이템 개수 update-->
	<update id="shopPremiumItemIng" parameterType="map">
		update shop_premium_item_tbl set shop_item_idx=#{shopItemIdx}
			where shop_premium_item_idx=(select shop_premium_item_idx from
			(select rownum as rnum, item.* from (select * from shop_premium_item_tbl where shop_item_idx=0 and user_idx=#{userIdx} order by rownum asc)
			 item where rownum = 1))
	</update>
	
	<!-- 아이템 적용 시 개수 update -->
	<update id="shopPowerItemIng" parameterType="map">
		update shop_power_item_tbl set shop_item_idx=#{shopItemIdx}, shop_power_item_state=1
			where shop_power_item_idx=(select shop_power_item_idx from
			(select rownum as rnum, item.* from (select * from shop_power_item_tbl where shop_item_idx=0 and user_idx=#{userIdx} order by rownum asc)
			 item where rownum = 1))
	</update>
	<!-- 아이템 해지 시 개수 update -->
	<update id="shopPowerItemEnd" parameterType="map">
		update shop_power_item_tbl set shop_item_idx=0, shop_power_item_state=0
			where shop_power_item_idx=(select shop_power_item_idx from
			(select rownum as rnum, item.* from (select * from shop_power_item_tbl where shop_item_idx=#{shopItemIdx} and user_idx=#{userIdx} order by rownum asc)
			 item where rownum = 1))
	</update>
	<!-- 매물 삭제 -->
	<update id="shopItemDelete" parameterType="shopItemVO">
		update shop_item_tbl set shop_item_sale_state='삭제' where shop_item_idx=#{shopItemIdx}
	</update>
	<!-- 방문 신청 -->
	<insert id="shopReserveJoin" parameterType="shopReservationVO">
		insert into shop_reservation_tbl values(
			shop_reservation_idx_seq.nextval,
			#{shopIdx, jdbcType=VARCHAR},
			#{shopName, jdbcType=VARCHAR},
			#{shopItemIdx, jdbcType=VARCHAR},
			#{shopItemTitle, jdbcType=VARCHAR},
			#{shopItemManager, jdbcType=VARCHAR},
			#{userIdx, jdbcType=VARCHAR},
			#{userName, jdbcType=VARCHAR},
			#{userTel, jdbcType=VARCHAR},
			default,
			sysdate
		)
	</insert>
	<!-- 방문 리스트 개수 -->
	<select id="shopReservationTotalCount" resultType="_int">
		select count(*) cnt from shop_reservation_tbl where shop_reservation_state='예약대기' or shop_reservation_state='예약완료'
	</select>
	<!-- 방문 리스트 뿌리기 -->
	<select id="selectReservationAllList" resultType="shopReservationVO" parameterType="map">
			select shop_reservation_idx as shopReservationIdx,
				shop_idx as shopIdx,
				shop_name as shopName,
				shop_item_idx as shopItemIdx,
				shop_item_title as shopItemTitle,
				shop_item_manager as shopItemManager,
				user_name as userName,
				user_tel as userTel,
				shop_reservation_state as shopReservationState,
				shop_reservation_date as shopReservationDate
			from (select rownum as rnum, item.* from (select * from shop_reservation_tbl where (shop_reservation_state='예약대기' or shop_reservation_state='예약완료' or shop_reservation_state='상담완료') and shop_idx=#{shopIdx}
			order by rownum desc) item)
			where rnum between #{start} and #{end} 
	</select>
	<!-- 예약 진행 -->
	<update id="reservationhold" parameterType="shopReservationVO">
		update shop_reservation_tbl set shop_reservation_state='예약완료' where shop_reservation_idx=#{shopReservationIdx}
	</update>
	<!-- 예약 완료 -->
	<update id="reservationIng" parameterType="shopReservationVO">
		update shop_reservation_tbl set shop_reservation_state='상담완료' where shop_reservation_idx=#{shopReservationIdx}
	</update>
	<!-- 예약 삭제 -->
	<update id="reservationDel" parameterType="shopReservationVO">
		update shop_reservation_tbl set shop_reservation_state='예약취소' where shop_reservation_idx=#{shopReservationIdx}
	</update>

	
	<select id="shopDel" resultType="shopItemVO" parameterType="map">
			select shop_item_idx as shopItemIdx,
				shop_item_manager as shopItemManager,
				shop_item_type1 as shopItemType1,
				shop_item_deal_type as shopItemDealType,
				shop_item_title as shopItemTitle,
				shop_item_sale_state as shopItemSaleState,
				shop_item_premium_state as shopItemPremiumState,
				shop_item_reg_date as shopItemRegDate
			from (select rownum as rnum, item.* from (select * from shop_item_tbl where shop_item_sale_state='삭제' order by rownum desc) item)
			where rnum between #{start} and #{end} 
	</select>
	
	<select id="shopSuc" resultType="shopItemVO" parameterType="map">
			select shop_item_idx as shopItemIdx,
				shop_item_manager as shopItemManager,
				shop_item_type1 as shopItemType1,
				shop_item_deal_type as shopItemDealType,
				shop_item_title as shopItemTitle,
				shop_item_sale_state as shopItemSaleState,
				shop_item_premium_state as shopItemPremiumState,
				shop_item_reg_date as shopItemRegDate
			from (select rownum as rnum, item.* from (select * from shop_item_tbl where shop_item_sale_state='판매완료' order by rownum desc) item)
			where rnum between #{start} and #{end} 
	</select>
	
	<select id="shopDelCount" resultType="_int">
		select count(*) cnt from shop_item_tbl where shop_item_sale_state='삭제'
	</select>
	
	<select id="shopSucCount" resultType="_int">
		select count(*) cnt from shop_item_tbl where shop_item_sale_state='판매완료'
	</select>
	
</mapper>